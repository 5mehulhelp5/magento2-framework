<?php
/**
 * MagedIn Technology
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  MagedIn
 * @copyright Copyright (c) 2025 MagedIn Technology.
 *
 * @author    MagedIn Support <support@magedin.com>
 */

declare(strict_types=1);

namespace MagedIn\Framework\Magento2\Model\Locator;

use Magento\Framework\App\RequestInterface;
use Magento\Framework\ObjectManagerInterface;
use Magento\Framework\Registry;

/**
 * @inheirtDoc
 */
class Locator extends AbstractLocator
{
    /**
     * @var string
     */
    private string $requestFieldName;

    /**
     * @var string
     */
    private string $registryKey;

    /**
     * @var string
     */
    private string $modelClassName;

    /**
     * @var string
     */
    private string $repositoryClassName;

    /**
     * @param Registry $registry
     * @param RequestInterface $request
     * @param ObjectManagerInterface $objectManager
     * @param string $requestFieldName
     * @param string $registryKey
     * @param string $modelClassName
     * @param string $repositoryClassName
     */
    public function __construct(
        Registry $registry,
        RequestInterface $request,
        ObjectManagerInterface $objectManager,
        string $requestFieldName,
        string $registryKey,
        string $modelClassName,
        string $repositoryClassName
    ) {
        $this->requestFieldName = $requestFieldName;
        $this->registryKey = $registryKey;
        $this->modelClassName = $modelClassName;
        $this->repositoryClassName = $repositoryClassName;
        parent::__construct($registry, $request, $objectManager);
    }

    /**
     * DocBlock for method.
     *
     * @return string
     */
    protected function getRequestFieldName(): string
    {
        return $this->requestFieldName;
    }

    /**
     * DocBlock for method.
     *
     * @return string
     */
    protected function getRegistryKey(): string
    {
        return $this->registryKey;
    }

    /**
     * Get the model class name
     *
     * @return string
     */
    protected function getModelClassName(): string
    {
        return $this->modelClassName;
    }

    /**
     * @inheritDoc
     */
    protected function getRepositoryClassName(): string
    {
        return $this->repositoryClassName;
    }
}
