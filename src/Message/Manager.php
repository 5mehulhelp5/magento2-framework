<?php
/**
 * MagedIn Technology
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  MagedIn
 * @copyright Copyright (c) 2025 MagedIn Technology.
 *
 * @author    MagedIn Support <support@magedin.com>
 */

namespace MagedIn\Framework\Magento2\Message;

use Magento\Framework\Message\ManagerInterface;
use Magento\Framework\Message\MessageInterface;

/**
 * DocBlock for Manager interface.
 */
class Manager
{
    /**
     * @var ManagerInterface
     */
    private ManagerInterface $messageManager;

    /**
     * @param ManagerInterface $messageManager
     */
    public function __construct(
        ManagerInterface $messageManager
    ) {
        $this->messageManager = $messageManager;
    }

    /**
     * Only adds an error message once.
     *
     * @param $message
     * @param string $identifier
     * @param null $group
     *
     * @return void
     */
    public function addUniqueErrorMessage($message, string $identifier, $group = null): self
    {
        $messages = $this->messageManager->getMessages(false, MessageInterface::TYPE_ERROR);
        foreach ($messages->getItems() as $messageItem) {
            if ($messageItem->getIdentifier() === $identifier) {
                return $this;
            }
        }
        $message = $this->messageManager
            ->createMessage(MessageInterface::TYPE_ERROR)
            ->setIdentifier($identifier)
            ->setText($message);
        $this->messageManager->addMessage($message, $group);
        return $this;
    }
}
