<?php
/**
 * MagedIn Technology
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  MagedIn
 * @copyright Copyright (c) 2025 MagedIn Technology.
 *
 * @author    MagedIn Support <support@magedin.com>
 */

declare(strict_types=1);

namespace MagedIn\Framework\Magento2\Ui\Component\Config\Generator\Form\Field;

/**
 * File upload field configuration generator
 */
class File extends AbstractField
{
    /**
     * @var string
     */
    protected string $formElement = 'fileUploader';

    /**
     * @var string
     */
    protected string $dataType = 'file';

    /**
     * @var array
     */
    private array $allowedExtensions = [];

    /**
     * @var string|null
     */
    private ?string $uploaderUrl = null;

    /**
     * @param array $allowedExtensions Allowed file extensions
     * @param string|null $uploaderUrl URL for file uploader
     */
    public function __construct(array $allowedExtensions = [], ?string $uploaderUrl = null)
    {
        $this->allowedExtensions = $allowedExtensions;
        $this->uploaderUrl = $uploaderUrl;
    }

    /**
     * Set allowed file extensions
     *
     * @param array $allowedExtensions
     * @return $this
     */
    public function setAllowedExtensions(array $allowedExtensions): self
    {
        $this->allowedExtensions = $allowedExtensions;
        return $this;
    }

    /**
     * Set uploader URL
     *
     * @param string $uploaderUrl
     * @return $this
     */
    public function setUploaderUrl(string $uploaderUrl): self
    {
        $this->uploaderUrl = $uploaderUrl;
        return $this;
    }

    /**
     * Customize configuration array with file-specific settings
     *
     * @param array $config Base configuration array
     * @return array Modified configuration array
     */
    protected function customizeConfig(array $config): array
    {
        if (!empty($this->allowedExtensions)) {
            $config['arguments']['data']['config']['allowedExtensions'] = implode(',', $this->allowedExtensions);
        }

        if ($this->uploaderUrl !== null) {
            $config['arguments']['data']['config']['uploaderConfig'] = [
                'url' => $this->uploaderUrl
            ];
        }

        return $config;
    }
}
