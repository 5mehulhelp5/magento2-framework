<?php
/**
 * MagedIn Technology
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  MagedIn
 * @copyright Copyright (c) 2025 MagedIn Technology.
 *
 * @author    MagedIn Support <support@magedin.com>
 */

declare(strict_types=1);

namespace MagedIn\Framework\Magento2\Validator;

use MagedIn\Framework\Magento2\Normalizer\Cpf as CpfNormalizer;

class Cpf
{
    /**
     * @var int
     */
    const MAX_LENGTH = 11;

    /**
     * @var \MagedIn\Normalizer\Cpf
     */
    private $normalizer;

    public function __construct(
        CpfNormalizer $normalizer
    ) {
        $this->normalizer = $normalizer;
    }

    /**
     * @param string $value
     *
     * @return bool
     */
    public function validate(string $value) : bool
    {
        $value = $this->normalizer->normalize($value);
        if (!$this->baseValidation($value) || !$this->validateAlgorithm($value)) {
            return false;
        }
        return true;
    }

    /**
     * @param string $value
     *
     * @return bool
     */
    private function baseValidation(string $value) : bool
    {
        /**
         * CPF number cannot have more than 11 numbers.
         */
        if (strlen($value) > self::MAX_LENGTH) {
            return false;
        }

        /**
         * Check if the numbers are repeated. E.g.: 999.999.999-99
         */
        if (preg_match('/(\d)\1{10}/', $value)) {
            return false;
        }

        return true;
    }

    /**
     * @param string $value
     *
     * @return bool
     */
    private function validateAlgorithm(string $value) : bool
    {
        for ($t = 9; $t < 11; $t++) {
            for ($d = 0, $c = 0; $c < $t; $c++) {
                $d += $value[$c] * (($t + 1) - $c);
            }

            $d = ((10 * $d) % 11) % 10;

            if ($value[$c] != $d) {
                return false;
            }
        }

        return true;
    }
}
